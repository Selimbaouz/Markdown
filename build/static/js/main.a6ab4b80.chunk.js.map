{"version":3,"sources":["sampleText.js","App.js","reportWebVitals.js","index.js"],"names":["sampleText","App","state","text","handleChange","event","target","value","setState","renderText","__html","marked","sanitize","localStorage","getItem","this","setItem","className","onChange","lassName","rows","cols","dangerouslySetInnerHTML","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAaA,EAAa,6hBC8DXC,E,4MAxDfC,MAAQ,CACNC,KAAMH,G,EAkBRI,aAAe,SAAAC,GACb,IAAMF,EAAOE,EAAMC,OAAOC,MAC1B,EAAKC,SAAS,CAAEL,U,EAIlBM,WAAa,SAAAN,GAEX,MAAO,CAAEO,OADMC,IAAOR,EAAM,CAAES,UAAU,M,kEArBxC,IAAMT,EAAOU,aAAaC,QAAQ,QAC/BX,EACDY,KAAKP,SAAS,CAAEL,SAEhBY,KAAKP,SAAS,CAAEL,KAAKH,M,2CAMvB,IAAMG,EAAOY,KAAKb,MAAMC,KACxBU,aAAaG,QAAQ,OAAQb,K,+BAiB3B,OACE,qBAAKc,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,0BACEC,SAAUH,KAAKX,aACfG,MAAQQ,KAAKb,MAAMC,KACnBgB,SAAS,eACTC,KAAK,KACLC,KAAK,SAET,qBAAKJ,UAAU,WAAf,SAEE,qBAAKK,wBAAyBP,KAAKN,WAAWM,KAAKb,MAAMC,mB,GAhDnDoB,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6ab4b80.chunk.js","sourcesContent":["export const sampleText = '# Titre\\n## Sous-Titre \\n### Titre plus profond\\n \\nLes paragraphes sont séparés\\npar une ligne vide.\\n\\nLaissé deux espaces à la fin d\\'une ligne pour  \\naller à la ligne.\\n\\nAttributs *italique*, **gras**, \\n`monospace`, ~~rayé~~.\\n\\nListe:\\n\\n  * pommes\\n  * oranges\\n  * poires\\n\\nListe numérotée:\\n\\n  1. jambon\\n  2. cornichon\\n  3. pain\\n\\n *[Sélim Baouz](https://www.selimbaouz.com)* \\n\\n Lien automatique : https://www.linkedin.com/in/s%C3%A9lim-baouz-646a53203// \\n\\n```\\n console.log(\"hello\"); \\n``` '\n","import React, { Component } from 'react'\nimport './App.css'\nimport marked from 'marked'\nimport { sampleText } from './sampleText'\n\nclass App extends Component {\nstate = {\n  text: sampleText\n}\n\ncomponentDidMount() {\n  const text = localStorage.getItem('text')\n  if(text){\n    this.setState({ text })\n  } else {\n    this.setState({ text:sampleText })\n  }\n\n}\n\ncomponentDidUpdate(){\n  const text = this.state.text \n  localStorage.setItem('text', text)\n}\n\nhandleChange = event => {\n  const text = event.target.value\n  this.setState({ text })\n}\n\n//Permet d'utiliser la librairie marked \nrenderText = text => {\n  const __html = marked(text, { sanitize: true }) //Sanitize permet d'empêcher l'utilisateur d'utiliser du code\n  return { __html }\n\n}\n\n\n  render () {\n    return (\n      <div className='container'>\n        <div className='row'>\n\n          <div className='col-sm-6'>\n            <textarea\n              onChange={this.handleChange}\n              value={ this.state.text }\n              lassName='form-control'\n              rows='35'\n              cols='35'/>\n          </div>\n          <div className='col-sm-6'>\n            \n            <div dangerouslySetInnerHTML={this.renderText(this.state.text)}></div>\n          </div>\n          \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}